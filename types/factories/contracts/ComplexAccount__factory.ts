/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ComplexAccount,
  ComplexAccountInterface,
} from "../../contracts/ComplexAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_guardians",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
    ],
    name: "addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "execBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllGaurdians",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSigners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newSigner",
        type: "address",
      },
    ],
    name: "gethash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "guardians",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isGuardian",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newSigner",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "recoverWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
    ],
    name: "removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001efa38038062001efa8339810160408190526200003491620002d3565b600580546001600160a01b0319166001600160a01b03851617905581516200006490600190602085019062000164565b5080516200007a90600290602084019062000164565b5060005b8251811015620000ea57600160036000858481518110620000a357620000a362000352565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000e18162000368565b9150506200007e565b5060005b81518110156200015a5760016004600084848151811062000113576200011362000352565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620001518162000368565b915050620000ee565b5050505062000390565b828054828255906000526020600020908101928215620001bc579160200282015b82811115620001bc57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000185565b50620001ca929150620001ce565b5090565b5b80821115620001ca5760008155600101620001cf565b6001600160a01b0381168114620001fb57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80516200022181620001e5565b919050565b600082601f8301126200023857600080fd5b815160206001600160401b0380831115620002575762000257620001fe565b8260051b604051601f19603f830116810181811084821117156200027f576200027f620001fe565b6040529384528581018301938381019250878511156200029e57600080fd5b83870191505b84821015620002c857620002b88262000214565b83529183019190830190620002a4565b979650505050505050565b600080600060608486031215620002e957600080fd5b8351620002f681620001e5565b60208501519093506001600160401b03808211156200031457600080fd5b620003228783880162000226565b935060408601519150808211156200033957600080fd5b50620003488682870162000226565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016200038957634e487b7160e01b600052601160045260246000fd5b5060010190565b611b5a80620003a06000396000f3fe6080604052600436106101445760003560e01c806380c5c7d0116100b6578063c399ec881161006f578063c399ec88146103b3578063d0cb75fa146103c8578063d42f2f35146103e8578063eb12d61e146103fd578063f0709e0a1461041d578063f560c7341461043d57600080fd5b806380c5c7d0146102f7578063a526d83b14610317578063a9059cbb14610337578063affed0e014610357578063b0d691fe14610375578063ba8e228d1461039357600080fd5b80632079fb9a116101085780632079fb9a146102255780634a58db191461025d5780634d44560d1461026557806365a348021461028557806371404156146102a75780637df73e27146102c757600080fd5b80630565bb67146101505780630825d1fc146101725780630c68ba21146101a55780630e316ab7146101e55780631b71bb6e1461020557600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b3660046115e4565b61045d565b005b34801561017e57600080fd5b5061019261018d36600461166d565b6104ac565b6040519081526020015b60405180910390f35b3480156101b157600080fd5b506101d56101c03660046116d4565b60046020526000908152604090205460ff1681565b604051901515815260200161019c565b3480156101f157600080fd5b506101706102003660046116d4565b6104f3565b34801561021157600080fd5b506101706102203660046116d4565b610691565b34801561023157600080fd5b506102456102403660046116f8565b6106a5565b6040516001600160a01b03909116815260200161019c565b6101706106cf565b34801561027157600080fd5b50610170610280366004611711565b610740565b34801561029157600080fd5b5061029a6107bc565b60405161019c919061173d565b3480156102b357600080fd5b506101706102c23660046116d4565b61081e565b3480156102d357600080fd5b506101d56102e23660046116d4565b60036020526000908152604090205460ff1681565b34801561030357600080fd5b506101706103123660046115e4565b6109b8565b34801561032357600080fd5b506101706103323660046116d4565b6109c0565b34801561034357600080fd5b50610170610352366004611711565b610aa3565b34801561036357600080fd5b506000546001600160601b0316610192565b34801561038157600080fd5b506005546001600160a01b0316610245565b34801561039f57600080fd5b506101926103ae3660046116d4565b610ae6565b3480156103bf57600080fd5b50610192610b24565b3480156103d457600080fd5b506101706103e33660046117cf565b610ba7565b3480156103f457600080fd5b5061029a610ca2565b34801561040957600080fd5b506101706104183660046116d4565b610d02565b34801561042957600080fd5b50610170610438366004611882565b610dd7565b34801561044957600080fd5b506102456104583660046116f8565b610fc7565b610465610fd7565b6104a6848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102f92505050565b50505050565b60006104b661109f565b6104c18585856110f9565b90506104d060408601866119af565b90506000036104e2576104e2856111d7565b6104eb8261126a565b949350505050565b6104fb610fd7565b6001600160a01b03811660009081526003602052604090205460ff166105685760405162461bcd60e51b815260206004820152601c60248201527f546869732061646472657373206973206e6f742061207369676e65720000000060448201526064015b60405180910390fd5b60005b60015481101561066f57816001600160a01b031660018281548110610592576105926119f6565b6000918252602090912001546001600160a01b03160361065d57600180546105bb908290611a22565b815481106105cb576105cb6119f6565b600091825260209091200154600180546001600160a01b0390921691839081106105f7576105f76119f6565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600180548061063657610636611a35565b600082815260209020810160001990810180546001600160a01b031916905501905561066f565b8061066781611a4b565b91505061056b565b506001600160a01b03166000908152600360205260409020805460ff19169055565b6106996112b7565b6106a2816112bf565b50565b600181815481106106b557600080fd5b6000918252602090912001546001600160a01b0316905081565b60006106e36005546001600160a01b031690565b6001600160a01b03163460405160006040518083038185875af1925050503d806000811461072d576040519150601f19603f3d011682016040523d82523d6000602084013e610732565b606091505b50509050806106a257600080fd5b610748610fd7565b6005546001600160a01b031660405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156107a057600080fd5b505af11580156107b4573d6000803e3d6000fd5b505050505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561081457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107f6575b5050505050905090565b610826610fd7565b6001600160a01b03811660009081526004602052604090205460ff1661088e5760405162461bcd60e51b815260206004820152601e60248201527f546869732061646472657373206973206e6f74206120677561726469616e0000604482015260640161055f565b60005b60025481101561099657816001600160a01b0316600282815481106108b8576108b86119f6565b6000918252602090912001546001600160a01b03160361098457600280546108e290600190611a22565b815481106108f2576108f26119f6565b600091825260209091200154600280546001600160a01b03909216918390811061091e5761091e6119f6565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061095d5761095d611a35565b600082815260209020810160001990810180546001600160a01b0319169055019055610996565b8061098e81611a4b565b915050610891565b506001600160a01b03166000908152600460205260409020805460ff19169055565b61046561109f565b6109c8610fd7565b6001600160a01b03811660009081526004602052604090205460ff1615610a3c5760405162461bcd60e51b815260206004820152602260248201527f54686973206164647265737320697320616c726561647920612067756172646960448201526130b760f11b606482015260840161055f565b6002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b039093166001600160a01b031990931683179055600091825260046020526040909120805460ff19169091179055565b610aab610fd7565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610ae1573d6000803e3d6000fd5b505050565b60008054604051610b0791309185916001600160601b031690602001611a64565b604051602081830303815290604052805190602001209050919050565b6000610b386005546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190611aa0565b905090565b610baf610fd7565b828114610bf45760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b604482015260640161055f565b60005b83811015610c9b57610c89858583818110610c1457610c146119f6565b9050602002016020810190610c2991906116d4565b6000858585818110610c3d57610c3d6119f6565b9050602002810190610c4f91906119af565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102f92505050565b80610c9381611a4b565b915050610bf7565b5050505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610814576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107f6575050505050905090565b610d0a610fd7565b6001600160a01b03811660009081526003602052604090205460ff1615610d735760405162461bcd60e51b815260206004820181905260248201527f54686973206164647265737320697320616c72656164792061207369676e6572604482015260640161055f565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039093166001600160a01b031990931683179055600091825260036020526040909120805460ff19169091179055565b600254815114610e295760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207369676e617475726573206c656e67746800000000000000604482015260640161055f565b60008054610e9a90309085906001600160601b03168480610e4983611ab9565b91906101000a8154816001600160601b0302191690836001600160601b03160217905550604051602001610e7f93929190611a64565b6040516020818303038152906040528051906020012061131b565b905060005b8251811015610f5f5760028181548110610ebb57610ebb6119f6565b60009182526020909120015483516001600160a01b0390911690610f0290859084908110610eeb57610eeb6119f6565b60200260200101518461135690919063ffffffff16565b6001600160a01b031614610f4d5760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207369676e61747572657360701b604482015260640161055f565b80610f5781611a4b565b915050610e9f565b50506001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039094166001600160a01b031990941684179055600092835260036020526040909220805460ff191690921790915550565b600281815481106106b557600080fd5b3360009081526003602052604090205460ff1680610ff457503330145b61102d5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640161055f565b565b600080846001600160a01b0316848460405161104b9190611adf565b60006040518083038185875af1925050503d8060008114611088576040519150601f19603f3d011682016040523d82523d6000602084013e61108d565b606091505b509150915081610c9b57805160208201fd5b6005546001600160a01b0316331461102d5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161055f565b6000806111058461131b565b9050600061115761111a6101408801886119af565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506113569050565b6001600160a01b03811660009081526003602052604090205490915060ff168061117f575032155b6111cb5760405162461bcd60e51b815260206004820152601860248201527f6163636f756e743a2077726f6e67207369676e61747572650000000000000000604482015260640161055f565b50600095945050505050565b600080546020830135916001600160601b0390911690806111f783611ab9565b91906101000a8154816001600160601b0302191690836001600160601b031602179055506001600160601b0316146106a25760405162461bcd60e51b81526020600482015260166024820152756163636f756e743a20696e76616c6964206e6f6e636560501b604482015260640161055f565b80156106a257604051600090339060001990849084818181858888f193505050503d8060008114610c9b576040519150601f19603f3d011682016040523d82523d6000602084013e610c9b565b61102d610fd7565b6005546040516001600160a01b038084169216907f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a90600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610b07565b6000806000611365858561137c565b91509150611372816113c1565b5090505b92915050565b60008082516041036113b25760208301516040840151606085015160001a6113a68782858561150b565b945094505050506113ba565b506000905060025b9250929050565b60008160048111156113d5576113d5611b0e565b036113dd5750565b60018160048111156113f1576113f1611b0e565b0361143e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161055f565b600281600481111561145257611452611b0e565b0361149f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161055f565b60038160048111156114b3576114b3611b0e565b036106a25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161055f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561154257506000905060036115c6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611596573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115bf576000600192509250506115c6565b9150600090505b94509492505050565b6001600160a01b03811681146106a257600080fd5b600080600080606085870312156115fa57600080fd5b8435611605816115cf565b935060208501359250604085013567ffffffffffffffff8082111561162957600080fd5b818701915087601f83011261163d57600080fd5b81358181111561164c57600080fd5b88602082850101111561165e57600080fd5b95989497505060200194505050565b6000806000806080858703121561168357600080fd5b843567ffffffffffffffff81111561169a57600080fd5b850161016081880312156116ad57600080fd5b93506020850135925060408501356116c4816115cf565b9396929550929360600135925050565b6000602082840312156116e657600080fd5b81356116f1816115cf565b9392505050565b60006020828403121561170a57600080fd5b5035919050565b6000806040838503121561172457600080fd5b823561172f816115cf565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561177e5783516001600160a01b031683529284019291840191600101611759565b50909695505050505050565b60008083601f84011261179c57600080fd5b50813567ffffffffffffffff8111156117b457600080fd5b6020830191508360208260051b85010111156113ba57600080fd5b600080600080604085870312156117e557600080fd5b843567ffffffffffffffff808211156117fd57600080fd5b6118098883890161178a565b9096509450602087013591508082111561182257600080fd5b5061182f8782880161178a565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561187a5761187a61183b565b604052919050565b600080604080848603121561189657600080fd5b83356118a1816115cf565b925060208481013567ffffffffffffffff808211156118bf57600080fd5b8187019150601f88818401126118d457600080fd5b8235828111156118e6576118e661183b565b8060051b6118f5868201611851565b918252848101860191868101908c84111561190f57600080fd5b87870192505b8383101561199c5782358681111561192d5760008081fd5b8701603f81018e1361193f5760008081fd5b88810135878111156119535761195361183b565b611964818801601f19168b01611851565b8181528f8c8385010111156119795760008081fd5b818c84018c83013760009181018b01919091528352509187019190870190611915565b8099505050505050505050509250929050565b6000808335601e198436030181126119c657600080fd5b83018035915067ffffffffffffffff8211156119e157600080fd5b6020019150368190038213156113ba57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561137657611376611a0c565b634e487b7160e01b600052603160045260246000fd5b600060018201611a5d57611a5d611a0c565b5060010190565b606093841b6bffffffffffffffffffffffff1990811682529290931b909116601483015260a01b6001600160a01b031916602882015260340190565b600060208284031215611ab257600080fd5b5051919050565b60006001600160601b03808316818103611ad557611ad5611a0c565b6001019392505050565b6000825160005b81811015611b005760208186018101518583015201611ae6565b506000920191825250919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b311bcb8fdab42a9c34325fcadba1c99404b96203e64ab936157443477aba02864736f6c63430008110033";

type ComplexAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplexAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplexAccount__factory extends ContractFactory {
  constructor(...args: ComplexAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    _signers: PromiseOrValue<string>[],
    _guardians: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ComplexAccount> {
    return super.deploy(
      anEntryPoint,
      _signers,
      _guardians,
      overrides || {}
    ) as Promise<ComplexAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    _signers: PromiseOrValue<string>[],
    _guardians: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      _signers,
      _guardians,
      overrides || {}
    );
  }
  override attach(address: string): ComplexAccount {
    return super.attach(address) as ComplexAccount;
  }
  override connect(signer: Signer): ComplexAccount__factory {
    return super.connect(signer) as ComplexAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplexAccountInterface {
    return new utils.Interface(_abi) as ComplexAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComplexAccount {
    return new Contract(address, _abi, signerOrProvider) as ComplexAccount;
  }
}
